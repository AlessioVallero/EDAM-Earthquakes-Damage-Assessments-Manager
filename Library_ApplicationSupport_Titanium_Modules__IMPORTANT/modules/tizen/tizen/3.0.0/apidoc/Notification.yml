---
name: Modules.Tizen.Notification
summary: Module for managing notifications created based on application events.
description: |
    This module provides a way to notify user events that occur in applications to users.
    which are represented by the <Modules.Tizen.Notification> object.
    
    The `Notification` module is a thin wrapper on the Tizen `NotificationManager`
    class.
    
    See also:
    
    *   [Tizen Notification API](https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fnotification.html)
    
    *   [Tizen  Notification Guide](https://developer.tizen.org/help/index.jsp?topic=%2Forg.tizen.web.device.apireference%2Ftizen%2Fnotification.html)
    
extends: Titanium.Module
platforms: [tizen]

methods:
  - name: postNotification
    summary: Post the notification to display.
    description: |
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/notification`
        
    parameters:
      - name: notification
        summary: A notification to post.
        type: Modules.Tizen.Notification

  - name: update
    summary: Updates a previously posted notification.
    description: |
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/notification`
        
    parameters:
      - name: notification
        summary: A notification to update.
        type: Modules.Tizen.Notification
        
  - name: remove
    summary: Removes a previously posted notification.
    description: |
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/notification`
        
    parameters:
      - name: id
        summary: A previously posted notification ID.
        type: String
        
  - name: removeAll
    summary: Removes all previously posted notifications by the current application.
    description: |
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/notification`
        
    
  - name: getNotification
    summary: Gets a previously posted notification by the current application.
    returns:
        type: Modules.Tizen.Notification
    parameters:
      - name: id
        summary: A previously posted notification ID.
        type: String
    
  - name: getAll
    summary: Gets all previously posted notifications by the current application.
    description: |
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/notification.read`
        
    returns:
        type: Array<Modules.Tizen.Notification.Notification>

  - name: createStatusNotification
    summary: Creates and returns an instance of <Modules.Tizen.Notification.StatusNotification>.
    returns:
        type: Modules.Tizen.Notification.StatusNotification
    parameters:
      - name: Options
        summary: The dictionary representing information about the new notification.
        type: StatusNotificationInit

  - name: createNotificationDetailInfo
    summary: Creates and returns an instance of <Modules.Tizen.Notification.NotificationDetailInfo>.
    returns:
        type: Modules.Tizen.Notification.NotificationDetailInfo
    parameters:
      - name: Options
        summary: The dictionary representing information about the new notificationDetailInfo.
        type: NotificationDetailInfoInit
    
properties:

  - name: NOTIFICATION_TYPE_STATUS
    summary: A notification type.
        
    description: |
        The posted status notification is displayed in the notification tray. 
        The status notification consists of icon, title, content and time. 
        The status notification can have the application control to launch the specific application 
        when selected by the user.
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_SIMPLE
    summary: A simple status notification.
        
    description: |
        The simple status notification is basic status notification type and removed automatically 
        when selected by the user. 
        All simple status notifications can be removed by user interaction. 
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_THUMBNAIL
    summary: A status notification with thumbnail.

    description: |
        The thumbnail status notification posts a thumbnail-format notification which
        includes several thumbnail image paths. The thumbnail status notification is also
        removed by a user selection.
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_ONGOING
    summary: A status notification about an ongoing event.
        
    description: |
        If the application needs to keep the user informed about the notification, consider using 
        ongoing status notification. Please note that the ongoing status notification should be 
        removed by the application that posted the notification. 
    type: String
    permission: read-only

  - name: STATUS_NOTIFICATION_TYPE_PROGRESS
    summary: A status notification with progress.
        
    description: |
        The progress status notification can display the information for the progress of a job. 
        Please note that the progress status notification should be removed by the application that 
        posted the notification. 
    type: String
    permission: read-only

  - name: NOTIFICATION_PROGRESS_TYPE_PERCENTAGE
    summary: The progress is indicated in percentage.
    type: String
    permission: read-only

  - name: NOTIFICATION_PROGRESS_TYPE_BYTE
    summary: The progress is indicated in bytes.
    type: String
    permission: read-only


examples:
  - title: Simple notification
    example: |
        Create and show a simple notification in the status bar.
        
            var Tizen = require('tizen'),
                // Notifications init parameters
                appControl = Tizen.Apps.createApplicationControl({
                    operation: 'http://tizen.org/appcontrol/operation/create_content',
                    uri: null
                }),        
                notificationDict = {
                    content: 'Hello world',
                    vibration: true, 
                    appControl: appControl
                },

            // Create and post notification
            notification = Tizen.Notification.createStatusNotification({
                statusType: Tizen.Notification.STATUS_NOTIFICATION_TYPE_SIMPLE,
                title: 'Simple notification',
                notificationInitDict: notificationDict
            });

            Tizen.Notification.postNotification(notification);

# Pseudo-type
---
name: StatusNotificationInitDict
summary: Simple object used in <StatusNotificationInit>.
properties:
  - name: content
    type: String
    summary: The content of the status notification.

  - name: iconPath
    type: String
    summary: The path to the icon to display in the notification.

  - name: soundPath
    type: String
    summary: The path of sound file to play when the notification is shown.

  - name: vibration
    type: Boolean
    summary: Holds whether to use vibration when the notification is shown.

  - name: appControl
    type: Modules.Tizen.Apps.ApplicationControl
    summary: |
        Holds the application control to launch when the notification is selected from the 
        notification tray.

  - name: appId
    type: String
    summary: |
        Holds the application id to launch when the notification is selected from the notification 
        tray.

  - name: progressValue
    type: Number
    summary: The initial progress value of the notification.

  - name: ledColor
    type: String
    summary: Sets the notification LED indicator color property.
    description: |
        The color is a numerical RGB value(#rrggbb). The format of a RGB value in hexadecimal notation is a "#" immediately followed by exactly six hexadecimal characters(0-9, A-F). The color format is case-insensitive. The LED indicator color will show its a close approximation. LED will only light on when screen is off. To turn the LED off, set "#000000" or null to ledColor. This method has effects when the device has notification LED. 

  - name: ledOnPeriod
    type: Number
    summary: The milliseconds for which the light is on The light continuously toggles on (ledOnPeriod) and off (ledOffPeriod). By default, this attribute is set to 0.

  - name: ledOffPeriod
    type: Number
    summary: The milliseconds for which the light is off By default, this attribute is set to 0.

---
name: StatusNotificationInit
summary: Simple object that contains parameters for [createStatusNotification](Modules.Tizen.Notification.createStatusNotification).
properties:
  - name: statusType
    type: String
    summary: |
        Notification type.
    description: |
        Supported values: <Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_SIMPLE>, 
        <Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_ONGOING>, 
        <Modules.Tizen.Notification.STATUS_NOTIFICATION_TYPE_PROGRESS>.

  - name: title
    type: String
    summary: Name of notification.

  - name: notificationInitDict
    type: StatusNotificationInitDict
    summary: (optional) Dictionary.
    optional: true

---
name: NotificationDetailInfoInit
summary: Simple object that contains parameters for [createNotificationDetailInfo](Modules.Tizen.Notification.createNotificationDetailInfo).
platforms: [tizen]
properties:
  - name: mainText
    type: String
    summary: |
        The main content of the detail information. This attribute is available on simple status notifications.

  - name: subText
    type: String
    summary: The secondary content of the detail information.
    optional: true
