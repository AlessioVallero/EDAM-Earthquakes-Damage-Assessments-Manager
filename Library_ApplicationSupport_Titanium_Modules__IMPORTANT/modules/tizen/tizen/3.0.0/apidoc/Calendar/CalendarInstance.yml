---
name: Modules.Tizen.Calendar.CalendarInstance
summary:  |
    This interface that has methods to manage events or tasks in a calendar. 
    A Calendar object contains a set of events or tasks, depending on the calendar type.
description: |
    This interface offers the following methods to manage events in a calendar:

    *   Finding items using a key-value filter.
    
    *   Adding items to a specific calendar using [add](Modules.Tizen.Calendar.CalendarInstance.add)
    / [addBatch](Modules.Tizen.Calendar.CalendarInstance.addBatch) methods.

    *   Updating existing items using [update](Modules.Tizen.Calendar.CalendarInstance.update] / 
    [updateBatch](Modules.Tizen.Calendar.CalendarInstance.updateBatch) methods.

    *   Deleting existing items using [remove](Modules.Tizen.Calendar.CalendarInstance.remove) / 
    [removeBatch](Modules.Tizen.Calendar.CalendarInstance.removeBatch) methods.

extends: Titanium.Proxy
createable: false
 
methods:
  - name: get
    summary: Gets the calendar item with the specified identifier.
    description: |
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.read`
        
    returns:
        summary: The matching CalendarItem object
        type: Modules.Tizen.Calendar.CalendarItem       
    parameters:
      - name: id
        summary:  The Calendar item identifier.
        type: Modules.Tizen.Calendar.CalendarEventId
        
  - name: add
    summary: Adds an item to the calendar synchronously.
    description: |
        If the item is successfully inserted in the calendar, 
        the CalendarItem will have its identifier (id attribute) set when the method returns.
        To update an existing item, call the [update](Modules.Tizen.Calendar.CalendarInstance.update]
        method instead. 
        If you wish to add a copy of an existing CalendarItem object, 
        call [clone](Modules.Tizen.Calendar.CalendarItem.clone) method first and pass the clone to the 
        [add](Modules.Tizen.Calendar.CalendarInstance.add) method.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.write`
        
    parameters:
      - name: item
        summary:  The calendar item to be added.
        type: Modules.Tizen.Calendar.CalendarItem
          
  - name: addBatch
    summary: Adds an array of items to the calendar asynchronously.
    description: |
        If all the items are successfully added to the calendar, the success callback will be 
        invoked, passing the list of CalendarItem objects that were added,
        with their identifier set (id attribute).
        
        If you wish to update an existing item, call the 
        [update](Modules.Tizen.Calendar.CalendarInstance.update] method instead. 
        If you wish to add a copy of an existing CalendarItem object, 
        call [clone](Modules.Tizen.Calendar.CalendarItem.clone) method first and pass the clone to 
        the  [add](Modules.Tizen.Calendar.CalendarInstance.add) method.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.write`
        
    parameters:
      - name: items
        summary:  The list of calendar items to add.
        type: Array<Modules.Tizen.Calendar.CalendarItem>
      - name: callback
        summary: Function to invoke on success or failure.
        type: Callback<AddBatchResponse>
        optional: true

  - name: update
    summary: |
        Updates an existing item in the calendar synchronously with the one specified in the argument.
    description: |
        In case of recurring events, the default behavior is to update all their instances 
        (including their detached ones), 
        as well. If you don't want that, the updateAllInstances flag should be set to false.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.write`
        
    parameters:
      - name: item
        summary: The Item object to update.
        type: Modules.Tizen.Calendar.CalendarItem
      - name: updateAllInstances
        summary:  |
            The flag indicating whether all the event instances should be updated as well or not 
            (default value is true). 
            This parameter only applies to calendar events, and doesn't apply to tasks.
        type: Boolean
        optional: true
        
  - name: updateBatch
    summary: |
        Updates an array of existing items in the calendar asynchronously with the specified 
        values in the argument.
    description: |
        In case of recurring events, the default behavior is to update all their instances 
        (including their detached ones), 
        as well. If you don't want that, the updateAllInstances flag should be set to false.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.write`
        
    parameters:
      - name: items
        summary: The list of calendar item objects to update.
        type: Array<Modules.Tizen.Calendar.CalendarItem>
      - name: callback
        summary: Function to invoke on success or failure.
        type: Callback<ErrorResponse>
        optional: true
      - name: updateAllInstances
        summary:  |
            The flag indicating whether all the event instances should be updated as well or not 
            (default value is true). 
            This parameter only applies to calendar events, and doesn't apply to tasks.
        type: Boolean
        optional: true

  - name: remove
    summary: | 
        Removes an item from the calendar that corresponds to the specified identifier. This 
        method will throw an exception if it fails to remove the specified calendar item.
    description: |
        For (recurring) events: In the case of calendar events, if the recurrence id (rid attribute) 
        is set to null, this method will remove the event identified by uid, and all of its possible 
        detached instances.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.write`
        
    parameters:
      - name: id
        summary:  The identifier (ID attribute) of the item object to delete.
        type: Modules.Tizen.Calendar.CalendarEventId

  - name: removeBatch
    summary: |
        Removes several items from the calendar asynchronously depending on the specified 
        identifiers.
    description: |
        For (recurring) events: In the case of calendar events, if the recurrence id, rid, is set to 
        null, 
        this method will remove the event identified by uid, as well as all its possible detached 
        instances.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.write`
        
    parameters:
      - name: ids
        summary: The identifiers (id attribute) of the items to delete
        type: Array<Modules.Tizen.Calendar.CalendarEventId>
      - name: callback
        summary: Function to invoke on success or failure.
        type: Callback<ErrorResponse>
        optional: true

  - name: find
    summary: |
        Finds and fetches an array of CalendarItem objects for items stored in the calendar 
        according to the supplied filter if it is valid else it will return all the items stored.
    description: |
        If the filter is passed and contains valid values, only those values in the calendar that 
        match the filter criteria as specified in the AbstractFilter interface will be returned in 
        the `callback`. If no filter is passed, or the filter contains any invalid value which is 
        null or undefined, then the implementation must return the full list of items in the 
        `callback`. If no items are available in the calendar (it is empty) or no item matches the 
        filter criteria, the `callback` will be invoked with an empty array.
        
        Filter specific remarks:

        - For event filtering based on start/end dates, items that recur during the given time 
        interval will be found, even if the parent item itself is outside the interval.
        - For event filtering based on the identifier, the identifier type should be 
        CalendarEventID (uid and rid). If no recurrence ID is given, the filter will match both 
        the parent event and all its detached instances.
        
        To use this method, you must include the following privilege in the `tiapp.xml` file of 
        your Titanium application:  

        * `http://tizen.org/privilege/calendar.read`
        
    parameters:
      - name: callback
        summary: Function to invoke on success or failure.
        type: Callback<FindResponse>
      - name: filter
        summary: |
            The supplied data used to filter the results of the 
            [find](Modules.Tizen.Calendar.CalendarInstance) method.
        type: Modules.Tizen.AbstractFilter
        optional: true  
      - name: sortMode
        summary:  The sort order in which the items return. 
        type: Modules.Tizen.SortMode
        optional: true

events:

  - name: itemsadded
    summary: Called when items are added to the calendar.
    description: |
        To use this event, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.read`
        
    properties:
      - name: items
        summary: The list of items that were added.
        type: Array<Modules.Tizen.Calendar.CalendarItem>

  - name: itemsupdated
    summary: Called when items are updated in the calendar.
    description: |
        To use this event, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.read`
        
    properties:
      - name: items
        summary: The list of items that were updated.
        type: Array<Modules.Tizen.Calendar.CalendarItem>

  - name: itemsremoved
    summary: Called when item are removed from the calendar.
    description: |
        To use this event, you must include the following privilege in the `tiapp.xml` file of your 
        Titanium application:  

        * `http://tizen.org/privilege/calendar.read`
        
    properties:
      - name: ids
        summary: The list of identifiers for the items that were removed.
        type: Array<CalendarItemId>

properties:

  - name: id 
    summary: An attribute to uniquely identify a calendar.
    type: String
    permission: read-only

  - name: name
    summary: |
        An attribute to assign a readable (descriptive) name for a calendar, such as work, 
        personal, etc.
    type: String
    permission: read-only

# Pseudo-type        
---
name: CalendarItemId 
summary: |
    A calendar item identifier, which can either be a <Modules.Tizen.Calendar.CalendarEventId> 
    a CalendarTaskId (which is a String).

---
name: AddBatchResponse
summary: |
    Simple object returned in the callback from the
    [addBatch](Modules.Tizen.Calendar.CalendarInstance.addBatch) method.
extends: ErrorResponse
properties:
  - name: success
    summary: Indicates if the operation succeeded.
    description: Returns `true` if request succeeded, `false` otherwise.
    type: Boolean

  - name: error
    summary: Error message, if any returned.
    description: Will be undefined if `success` is `true`.
    type: String

  - name: code
    summary: Error code. Returns 0 if `success` is `true`.
    description: |
        Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
        was generated by the operating system, that system's error value is used.
        Otherwise, this value will be -1.
    type: Number

  - name: items
    summary:  The array of CalendarItem objects.
    description: Will be undefined if `success` is `false`.
    type: Array<Modules.Tizen.Calendar.CalendarItem>

---
name: FindResponse
summary: |
    Simple object returned in the callback from the
    [find](Modules.Tizen.Calendar.CalendarInstance.find) method.
extends: ErrorResponse
properties:
  - name: success
    summary: Indicates if the operation succeeded.
    description: Returns `true` if request succeeded, `false` otherwise.
    type: Boolean

  - name: error
    summary: Error message, if any returned.
    description: Will be undefined if `success` is `true`.
    type: String

  - name: code
    summary: Error code. Returns 0 if `success` is `true`.
    description: |
        Error code will be 0 if `success` is `true`, nonzero otherwise. If the error
        was generated by the operating system, that system's error value is used.
        Otherwise, this value will be -1.
    type: Number

  - name: items
    summary: The array of CalendarItem objects. 
    description: Will be undefined if `success` is `false`.
    type: Array<Modules.Tizen.Calendar.CalendarItem>
